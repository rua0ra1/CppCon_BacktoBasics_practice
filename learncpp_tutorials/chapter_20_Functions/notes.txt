20.1 Function Pointers
- Instead of pointers to variable, it is pointers to functions
- Passing function as arguments to other functions
  - one of the most useful things to do with function pointers is apass a function as an argument to another function.
20.2 The stack and the heap
- the memory that a program uses is typically divided into a few different areas 
  1) The code segment- where the compiled program sits in memory.
  2) The bss segment where zero initalized global and static variables are stored
  3) The data segment where initialized global and static variables are stored
  4) The heap, where dynamically allocated variables are allocated from
  5) The call stack, where function parameter local vatiables and other function related information are stored.
- allocating memory on the heap as following disadvantages
  1) Allocating memory on the heap is comparatively slow.
  2) Allocated memory stays allocated until it is specifically deallocated or the application ends
  3) dynamically allocated memory must be accessed through a pointer, Dereferencing a pointer is slower than accessing a variable directly
  4) Because the heap is a big pool of memory, large arrays, structures or classes can be allocated here
- 
